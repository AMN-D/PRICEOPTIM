https://tryolabs.com/blog/price-optimization-machine-learning 

Prepare your dataset: First, you need to prepare your dataset. You should have a dataset containing historical sales data and other relevant features. The dataset should include the original price of each product and the quantity sold.

Preprocess your data: Next, you need to preprocess your data. This includes cleaning the data, handling missing values, and encoding categorical variables. You can use libraries like Pandas and NumPy to preprocess your data.

Split your dataset: You should split your dataset into a training set and a testing set. The training set is used to train the model, and the testing set is used to evaluate the model's performance.

Define the neural network architecture: For price optimization, you can use a deep neural network (DNN) with multiple hidden layers. The input to the DNN is the features of the product, and the output is the optimized price. You can use a library like TensorFlow or PyTorch to define the neural network architecture.

Train the model: Once you have defined the neural network architecture, you can train the model using the training set. You can use an optimization algorithm like Adam or SGD to minimize the loss function.

Evaluate the model: After training the model, you can evaluate its performance using the testing set. You can calculate metrics like mean squared error (MSE) and mean absolute error (MAE) to evaluate the model's performance.

Optimize the price: Finally, you can use the trained model to optimize the price of a product. You can feed the features of the product into the model and get the optimized price as output.